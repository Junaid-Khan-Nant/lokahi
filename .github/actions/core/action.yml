name: 'Build and test core'
description: 'This implements unit and built-time integration tests on core, dir platform.'
inputs:
  dir-location:
    description: 'The dir containing the change.'
    required: true
    default: 'none'
  github-token:
    description: 'GITHUB_TOKEN secret for the workflow so SonarCloud can get PR information'
    required: true
  sonar-token:
    description: 'SONAR_TOKEN secret to authenticate job with SonarCloud'
    required: true

runs:
  using: "composite"
  steps:
    - name: Cache SonarCloud packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-${{ runner.arch }}-sonar

    - name: global data
      run: |
        echo "Testing actions - " ${{ inputs.dir-location }}

        netstat -ltan

        cd ${{ inputs.dir-location }}
        # Keep the input arg of the dir, if the process is the same for each
        # core, rest-server, and ui, we can make this like a generic function.

        # IMPORTANT: Check the .circleci/ original build.

        # Simple build - no Integration Tests
        #mvn clean install
        # For testing the pipeline, just run this without tests to get the
        # publish working with releasing working correctly. The test takes
        # 5mins roughly.
        # Release on 0.0.0 for now.

        # Full build, including docker image creation and Integration Tests
        #mvn -Prun-it clean install
        mvn -Prun-it \
          -Dhttp.keepAlive=false \
          -Dmaven.wagon.http.pool=false \
          -Dmaven.wagon.httpconnectionManager.ttlSeconds=25 \
          -Dmaven.wagon.http.retryHandler.count=3 \
          clean install \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY

          # Added extra args to deal with time out issue, see
          # https://github.com/actions/virtual-environments/issues/1499.

        # How do we trigger the unit tests?

        #docker images
        # The image, opennms-horizon-application-it-image, is just for the
        # integration tests, ignore.  

      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        SONAR_TOKEN: ${{ inputs.sonar-token }}
        SONAR_PROJECT_KEY: 'opennms_horizon-stream_core'
