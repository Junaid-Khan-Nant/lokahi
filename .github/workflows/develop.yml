name: develop

on:
  push:
    branches:
      - 'develop'
  pull_request:
    types: [labeled]
    branches:
      - 'develop'
  workflow_call:
    inputs:
      image-tag:
        description: 'Tag for all images'
        required: false
        type: string

jobs:
  java-prereqs:
    if: ${{ ( github.event.label.name == 'actions-develop' ) || ( github.event.ref == 'refs/heads/develop' ) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install prereqs
        uses: ./.github/actions/java-install-prereqs
  alarm:
    needs: java-prereqs
    uses: ./.github/workflows/feature-alarm.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  datachoices:
    needs: java-prereqs
    uses: ./.github/workflows/feature-datachoices.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  events:
    needs: java-prereqs
    uses: ./.github/workflows/feature-events.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  rest-server:
    needs: java-prereqs
    uses: ./.github/workflows/feature-rest-server.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  inventory:
    needs: java-prereqs
    uses: ./.github/workflows/feature-inventory.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  metrics-processor:
    needs: java-prereqs
    uses: ./.github/workflows/feature-metrics-processor.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  notifications:
    needs: java-prereqs
    uses: ./.github/workflows/feature-notifications.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  minion:
    needs: java-prereqs
    uses: ./.github/workflows/feature-minion.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  minion-gateway:
    needs: java-prereqs
    uses: ./.github/workflows/feature-minion-gateway.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  minion-gateway-grpc-proxy:
    needs: java-prereqs
    uses: ./.github/workflows/feature-minion-gateway-grpc-proxy.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
      skip-prereqs: true
  ui:
    uses: ./.github/workflows/feature-ui.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
  operator:
    uses: ./.github/workflows/feature-operator.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
  grafana:
    uses: ./.github/workflows/feature-grafana.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
  keycloak-ui:
    uses: ./.github/workflows/feature-keycloak-ui.yml
    secrets: inherit
    with:
      image-tag: ${{ inputs.image-tag || 'pipeline-test' }}
  external-it:
    needs: [
      alarm,
      datachoices,
      events,
      grafana,
      inventory,
      keycloak-ui,
      metrics-processor,
      minion,
      minion-gateway,
      minion-gateway-grpc-proxy,
      notifications,
      operator,
      rest-server,
      ui
    ]
    runs-on: self-hosted
    steps:
      - name: Create & set up cluster
        run: |
          
          # Delete if exists from previous failed run.
          kind delete clusters kind-test
          
          # Setup localhost DNS
          sudo echo "127.0.0.1 onmshs" | sudo tee -a /etc/hosts
          
          # Build cluster with Horizon Stream installed.
          cd install-local/
          ./install-local.sh custom-images onmshs

        shell: bash

      - name: Set up & run Cucumber tests
        run: |
          # Cucumber test
          mvn install
          HORIZON_STREAM_BASE_URL=http://localhost:11080 
          KEYCLOAK_BASE_URL=https://onmshs/auth
          KEYCLOAK_REALM=opennms
          KEYCLOAK_USERNAME=admin
          KEYCLOAK_PASSWORD=admin
          export HORIZON_STREAM_BASE_URL KEYCLOAK_BASE_URL KEYCLOAK_REALM KEYCLOAK_USERNAME KEYCLOAK_PASSWORD
          PROJECT_VERSION="$(mvn -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive -q org.codehaus.mojo:exec-maven-plugin:1.6.0:exec)"
          java -jar "external-horizon-stream-it/target/external-horizon-stream-it-${PROJECT_VERSION}.jar"
          
          ## If fail, exit which kills the ci-cd workflow.
          ##for i in $(jq '.[0].elements[].steps[].result.status' external-it/external-horizon-stream-it/cucumber.reports/cucumber-report.json);do
          ##  if [[ $i != '"passed"' ]];then
          ##    exit;
          ##  fi
          ##done
        shell: bash
        working-directory: external-it

      - name: Clean up cluster
        if: ${{ always() }}
        run: kind delete clusters kind-test
        shell: bash
