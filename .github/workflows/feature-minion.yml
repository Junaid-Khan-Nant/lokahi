name: feature-minion

on:
  pull_request:
    paths:
      - 'minion/**'
  workflow_call:
    inputs:
      image:
        description: 'Name of the image to build'
        required: false
        type: string
      image-tag:
        description: 'Tag for the built image'
        required: false
        type: string
      skip-prereqs:
        description: 'Toggles prereq installation'
        required: false
        type: boolean
        default: false

env:
  IMAGE: ${{ inputs.image || 'horizon-stream-minion' }}
  IMAGE_TAG: ${{ inputs.image-tag || github.sha }}
  IMAGE_REGISTRY: ghcr.io

jobs:
  prereqs:
    if: ${{ !inputs.skip-prereqs }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install prereqs
        id: install-prereqs
        uses: ./.github/actions/java-install-prereqs
  build-and-test:
    needs: prereqs
    if: ${{ inputs.skip-prereqs || success() }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Cache Maven dependencies
        uses: ./.github/actions/maven-cache
        with:
          cache-key-hash: ${{ hashFiles('minion/**/pom.xml', 'parent-pom/pom.xml', 'shared-lib/**/pom.xml') }}

      - name: Restore prereqs Maven Repository cache
        uses: ./.github/actions/java-restore-prereqs

      - name: Build & Sonar Scan
        run: |
          mvn -B verify \
              -Prun-it -Ddocker.image=$IMAGE_REGISTRY/${{github.actor}}/$IMAGE:$IMAGE_TAG \
              -T 1C \
              -Dorg.slf4j.simpleLogger.showThreadName=true \
              -Dorg.slf4j.simpleLogger.showDateTime=true \
              -Dorg.slf4j.simpleLogger.dateTimeFormat="yyyy-MM-dd HH:mm:ss" \
              org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_PROJECT_KEY: 'opennms_horizon-stream_minion'
        working-directory: 'minion'

      - name: Push Image
        run: docker push $IMAGE_REGISTRY/${{github.actor}}/$IMAGE:$IMAGE_TAG
        working-directory: 'minion'
