<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0"
           xmlns:ext="http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0"
           xsi:schemaLocation="
		http://www.osgi.org/xmlns/blueprint/v1.0.0
		http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.3.0
		http://aries.apache.org/schemas/blueprint-cm/blueprint-cm-1.3.0.xsd

		http://aries.apache.org/blueprint/xmlns/blueprint-ext/v1.5.0
		http://aries.apache.org/schemas/blueprint-ext/blueprint-ext-1.5.xsd">

    <!-- service import -->
    <reference id="eventConfDao" interface="org.opennms.horizon.events.api.EventConfDao" />

    <bean id="metricRegistry" class="com.codahale.metrics.MetricRegistry" />

    <!-- FIXME: OOPS: We need model access to respond to the these calls. -->
    <bean id="eventUtil" class="org.opennms.netmgt.eventd.MockEventUtil" />
    <bean id="eventWriter" class="org.opennms.netmgt.eventd.MockEventWriter"/>

    <bean id="eventExpander" class="org.opennms.netmgt.eventd.EventExpander">
        <argument ref="metricRegistry"/>
        <argument ref="eventConfDao"/>
        <argument ref="eventUtil"/>
    </bean>

    <bean id="eventdConfigManager" class="org.opennms.netmgt.eventd.MockEventdConfig"/>
    <bean id="shouldLogEventSummaries" factory-ref="eventdConfigManager" factory-method="shouldLogEventSummaries"/>
    <bean id="eventdEventHandler" class="org.opennms.netmgt.eventd.DefaultEventHandlerImpl">
        <argument ref="metricRegistry"/>
        <property name="eventProcessors">
            <list>
                <!--
                  This EventProcessor can be used to perform regex replacements on incoming parm values.
                  It was added in 1.11 and because of performance concerns, it is commented-out for now.
                -->
                <!-- <ref bean="eventParmRegexFilter"/> -->
                <ref component-id="eventExpander"/>
                <ref component-id="eventWriter"/> <!--HibernateEventWriter -->
                <ref component-id="eventIpcBroadcastProcessor"/>
            </list>
        </property>
        <property name="logEventSummaries" ref="shouldLogEventSummaries" />
    </bean>

    <bean id="eventIpcManagerHandlerPoolSize" factory-ref="eventdConfigManager" factory-method="getReceivers"/>
    <bean id="eventIpcManagerHandlerQueueLength" factory-ref="eventdConfigManager" factory-method="getQueueLength"/>
    <bean id="eventIpcManagerImpl" class="org.opennms.netmgt.eventd.EventIpcManagerDefaultImpl" init-method="init">
        <argument ref="metricRegistry"/>
        <property name="handlerPoolSize" ref="eventIpcManagerHandlerPoolSize"/>
        <property name="handlerQueueLength" ref="eventIpcManagerHandlerQueueLength"/>
        <property name="eventHandler" ref="eventdEventHandler"/>
    </bean>
    <service interface="org.opennms.horizon.events.api.EventProxy" ref="eventIpcManagerImpl" />
    <service interface="org.opennms.horizon.events.api.EventSubscriptionService" ref="eventIpcManagerImpl" />
    <service interface="org.opennms.horizon.events.api.EventForwarder" ref="eventIpcManagerImpl" />

    <bean id="eventIpcBroadcastProcessor" class="org.opennms.netmgt.eventd.processor.EventIpcBroadcastProcessor">
        <argument ref="metricRegistry"/>
        <property name="eventIpcBroadcaster" ref="eventIpcManagerImpl"/>
    </bean>

</blueprint>